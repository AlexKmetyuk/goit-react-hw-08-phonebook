{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Phonebook/PhonebookForm.jsx","components/Phonebook/PhonebookList.jsx","components/Phonebook/Filter.jsx","views/PhonebookView.jsx"],"names":["getRandomValues","dispatch","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","message","contact","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","phonebook","contacts","getFilter","filter","createSelector","normalizedContactNames","toString","toLowerCase","name","includes","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","substr","stringify","arr","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","PhonebookForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","handleCheckUniqueContact","props","onSubmit","reset","check","find","alert","uuidv4","className","this","type","pattern","title","required","onChange","Component","connect","phonebookSelectors","phonebookOperations","PhonebookList","fetchContacts","map","onClick","onRemove","getVisibleContacts","allContacts","e","changeFilter","target","isAuth","authSelectors","getIsAuth"],"mappings":"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","file":"static/js/5.a29b6cb6.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\n// axios.defaults.baseURL = \"http://localhost:4444\";.message\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n  return axios\n    .get(\"/contacts\")\n    .then(({data}) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error.message)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n  return axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  return axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error.message)));\n};\n\nexport default { fetchContacts ,addContact, deleteContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.phonebook.contacts;\n\nconst getFilter = (state) => state.phonebook.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContactNames = filter.toString().toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContactNames)\n    );\n  }\n);\n\nexport default { getContacts, getFilter, getVisibleContacts };\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass PhonebookForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.handleCheckUniqueContact(this.state.name)) {\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleCheckUniqueContact = (name) => {\n    const check = this.props.contacts.find((contact) => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert(\"Contact is already exist\");\n      return check;\n    }\n  };\n\n  reset = () => {\n    this.setState({ id: uuidv4(), name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={\"form\"} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getContacts(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => {\n    dispatch(phonebookOperations.addContact(contact));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations.js\";\n\nclass PhonebookList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.props.contacts.map((contact) => (\n          <li key={contact.id}>\n            <p>\n              📱 {contact.name}: {contact.number}\n            </p>\n            <button className='btnRemove'\n              onClick={() => {\n                this.props.onRemove(contact.id);\n              }}\n            >\n              Remove\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedContactNames = filter.toString().toLowerCase();\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedContactNames)\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => {\n    dispatch(phonebookOperations.fetchContacts());\n  },\n  onRemove: (id) => {\n    dispatch(phonebookOperations.deleteContact(id));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","import { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={\"form\"}>\n    Find contacts by name\n    <input value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import PhonebookForm from \"../components/Phonebook/PhonebookForm\";\nimport PhonebookList from \"../components/Phonebook/PhonebookList\";\nimport Filter from \"../components/Phonebook/Filter\";\nimport authSelectors from \"../redux/auth/aut-selectors\";\nimport { connect } from \"react-redux\";\n\nconst PhonebookView = ({ isAuth }) => {\n  return (\n    <div className=\"app\">\n\n          <h1>Phonebook</h1>\n          <PhonebookForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <PhonebookList />{\" \"}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.getIsAuth(state),\n});\n\nexport default connect(mapStateToProps, null)(PhonebookView);\n"],"sourceRoot":""}